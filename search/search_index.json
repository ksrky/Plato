{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Plato Documentation","text":""},{"location":"getting-started/installation/","title":"Installation","text":""},{"location":"getting-started/installation/#getting-the-source","title":"Getting the source","text":"<p>From GitHub</p> <pre><code>$ git clone https://github.com/ksrky/Plato.git\n</code></pre>"},{"location":"getting-started/installation/#building-and-installing","title":"Building and Installing","text":"<p>Using stack</p> <pre><code>$ cd Plato\n$ stack install\n</code></pre>"},{"location":"implementation-notes/compiler-structure/","title":"Compiler structure","text":"<p>Compiler flow</p>"},{"location":"implementation-notes/core-language/","title":"Core language","text":""},{"location":"implementation-notes/type-checking/","title":"Type checking","text":""},{"location":"implementation-notes/type-checking/#typing-language","title":"Typing language","text":"<p>| variable | x | data constructor | K | | type variable | \\alpha | type constructor | T |</p> terms t x | t\\ t | \\lambda x\\langle\\colon\\tau\\rangle.\\ t | t\\ \\overline{\\tau} | \\Lambda \\overline{\\alpha\\colon\\kappa}.\\ t |\\texttt{let}\\ \\Gamma \\ \\texttt{in}\\ t | \\texttt{case}\\ t\\langle\\colon \\tau\\rangle\\ \\{ \\overline{p \\rightarrow t}\\} patterns p x | _ | K\\ \\overline{p} types \\tau \\alpha | T | \\tau\\rightarrow\\tau | \\forall \\overline{\\alpha\\langle\\colon \\kappa\\rangle}.\\ \\tau | \\tau\\ \\tau kinds \\kappa * | \\kappa\\rightarrow\\kappa definitions \\Delta \\texttt{fun}\\ x\\,\\texttt{=}\\,\\{\\overline{\\overline{p}\\,\\texttt{-&gt;}\\,t}\\} | \\texttt{data}\\ T\\ \\overline{\\alpha\\langle\\colon\\kappa\\rangle}\\,\\texttt{=}\\,\\{\\overline{K\\colon\\tau}\\} specificaion \\Sigma \\texttt{fun}\\ x\\colon\\tau | \\texttt{data}\\ T\\colon\\kappa context \\Gamma \\varepsilon | \\Delta,\\ \\Gamma | \\Sigma,\\ \\Gamma"}]}