cabal-version: 1.12

-- This file has been generated from package.yaml by hpack version 0.35.1.
--
-- see: https://github.com/sol/hpack

name:           Plato
version:        0.1.0.0
description:    Please see the README on GitHub at <https://github.com/ksrky/Plato#readme>
homepage:       https://github.com/ksrky/Plato#readme
bug-reports:    https://github.com/ksrky/Plato/issues
author:         ksrk
maintainer:     kswgrky@gmail.com
copyright:      2022 ksrk
license:        BSD3
license-file:   LICENSE
build-type:     Simple
extra-source-files:
    README.md
    ChangeLog.md

source-repository head
  type: git
  location: https://github.com/ksrky/Plato

library
  exposed-modules:
      Main
      Plato.Common.Debug
      Plato.Common.Error
      Plato.Common.Ident
      Plato.Common.Location
      Plato.Common.Name
      Plato.Common.Uniq
      Plato.Common.Utils
      Plato.Core.Calc
      Plato.Core.Env
      Plato.Core.Eval
      Plato.Main
      Plato.Parsing
      Plato.Parsing.Action
      Plato.Parsing.Layout
      Plato.Parsing.Lexer
      Plato.Parsing.Monad
      Plato.Parsing.Parser
      Plato.Parsing.Token
      Plato.PsToTyp
      Plato.Scoping
      Plato.Scoping.SynRstrc
      Plato.Scoping.Utils
      Plato.Syntax.Core
      Plato.Syntax.Parsing
      Plato.Syntax.Parsing.Decl
      Plato.Syntax.Parsing.Expr
      Plato.Syntax.Parsing.Pat
      Plato.Syntax.Parsing.TopDecl
      Plato.Syntax.Parsing.Type
      Plato.Syntax.Typing
      Plato.Syntax.Typing.Decl
      Plato.Syntax.Typing.Expr
      Plato.Syntax.Typing.Kind
      Plato.Syntax.Typing.Pat
      Plato.Syntax.Typing.Type
      Plato.Typing
      Plato.Typing.Env
      Plato.Typing.Kc
      Plato.Typing.Kc.Unify
      Plato.Typing.Kc.Utils
      Plato.Typing.Monad
      Plato.Typing.Tc
      Plato.Typing.Tc.InstGen
      Plato.Typing.Tc.Subst
      Plato.Typing.Tc.Trans
      Plato.Typing.Tc.Unify
      Plato.Typing.Tc.Utils
      Plato.Typing.Zonking
      Plato.TypToCore
  other-modules:
      Paths_Plato
  hs-source-dirs:
      src
  default-extensions:
      OverloadedStrings
      ImportQualifiedPost
  ghc-options: -Wall -Wcompat -Widentities -Wincomplete-record-updates -Wincomplete-uni-patterns -Wmissing-home-modules -Wpartial-fields -Wredundant-constraints -Wno-name-shadowing
  build-tools:
      alex
    , happy
  build-tool-depends:
      hspec-discover:hspec-discover
  build-depends:
      array
    , base >=4.7 && <5
    , bytestring
    , containers
    , directory
    , filepath
    , haskeline
    , hspec
    , mtl
    , optparse-applicative
    , prettyprinter
    , safe-exceptions
    , text
    , transformers
    , vector
  default-language: Haskell2010

executable plato
  main-is: Main.hs
  other-modules:
      Plato.Common.Debug
      Plato.Common.Error
      Plato.Common.Ident
      Plato.Common.Location
      Plato.Common.Name
      Plato.Common.Uniq
      Plato.Common.Utils
      Plato.Core.Calc
      Plato.Core.Env
      Plato.Core.Eval
      Plato.Main
      Plato.Parsing
      Plato.Parsing.Action
      Plato.Parsing.Layout
      Plato.Parsing.Lexer
      Plato.Parsing.Monad
      Plato.Parsing.Parser
      Plato.Parsing.Token
      Plato.PsToTyp
      Plato.Scoping
      Plato.Scoping.SynRstrc
      Plato.Scoping.Utils
      Plato.Syntax.Core
      Plato.Syntax.Parsing
      Plato.Syntax.Parsing.Decl
      Plato.Syntax.Parsing.Expr
      Plato.Syntax.Parsing.Pat
      Plato.Syntax.Parsing.TopDecl
      Plato.Syntax.Parsing.Type
      Plato.Syntax.Typing
      Plato.Syntax.Typing.Decl
      Plato.Syntax.Typing.Expr
      Plato.Syntax.Typing.Kind
      Plato.Syntax.Typing.Pat
      Plato.Syntax.Typing.Type
      Plato.Typing
      Plato.Typing.Env
      Plato.Typing.Kc
      Plato.Typing.Kc.Unify
      Plato.Typing.Kc.Utils
      Plato.Typing.Monad
      Plato.Typing.Tc
      Plato.Typing.Tc.InstGen
      Plato.Typing.Tc.Subst
      Plato.Typing.Tc.Trans
      Plato.Typing.Tc.Unify
      Plato.Typing.Tc.Utils
      Plato.Typing.Zonking
      Plato.TypToCore
      Paths_Plato
  hs-source-dirs:
      src
  default-extensions:
      OverloadedStrings
      ImportQualifiedPost
  ghc-options: -Wall -Wcompat -Widentities -Wincomplete-record-updates -Wincomplete-uni-patterns -Wmissing-home-modules -Wpartial-fields -Wredundant-constraints -Wno-name-shadowing -threaded -rtsopts -with-rtsopts=-N
  build-tools:
      alex
    , happy
  build-tool-depends:
      hspec-discover:hspec-discover
  build-depends:
      Plato
    , array
    , base >=4.7 && <5
    , bytestring
    , containers
    , directory
    , filepath
    , haskeline
    , hspec
    , mtl
    , optparse-applicative
    , prettyprinter
    , safe-exceptions
    , text
    , transformers
    , vector
  default-language: Haskell2010

test-suite Plato-test
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  other-modules:
      Plato.Test.Core.Eval
      Plato.Test.Core.KindInfer
      Plato.Test.Core.Pretty
      Plato.Test.CoreSpec
      Plato.Test.Parsing.FixResol
      Plato.Test.Parsing.Pretty
      Plato.Test.Parsing.Utils
      Plato.Test.ParsingSpec
      Plato.Test.Typing.ExprTransl
      Plato.Test.Typing.Pretty
      Plato.Test.Typing.TypeCheck
      Plato.Test.Typing.Utils
      Plato.Test.TypingSpec
      Plato.Test.Utils
      Paths_Plato
  hs-source-dirs:
      test
  default-extensions:
      OverloadedStrings
      ImportQualifiedPost
  ghc-options: -Wall -Wcompat -Widentities -Wincomplete-record-updates -Wincomplete-uni-patterns -Wmissing-home-modules -Wpartial-fields -Wredundant-constraints -Wno-name-shadowing -threaded -rtsopts -with-rtsopts=-N
  build-tools:
      alex
    , happy
  build-tool-depends:
      hspec-discover:hspec-discover
  build-depends:
      Plato
    , array
    , base >=4.7 && <5
    , bytestring
    , containers
    , directory
    , filepath
    , haskeline
    , hspec
    , hspec-discover
    , mtl
    , optparse-applicative
    , prettyprinter
    , safe-exceptions
    , text
    , transformers
    , vector
  default-language: Haskell2010
